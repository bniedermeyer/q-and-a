/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface QAndA {
        /**
          * The endpoint that questions/upvotes will be posted to
         */
        "askEndpoint": string;
        /**
          * The correlation id of the q-and-a session. If present, will be sent with questions and used to retrieve questions by appending a `correlationId` query parameter to the `retrieveEndpoint` url.
         */
        "correlationId": string;
        /**
          * Primary color. Used mainly for button borders. Defaults to #10915b
         */
        "primaryColor": string;
        /**
          * The endpoint the list of questions will be retrieved from
         */
        "retrieveEndpoint": string;
        /**
          * Secondary color. Used for question and header text color. Defaults to  #112378
         */
        "secondaryColor": string;
        /**
          * The optional id of the user asking a question. Will be sent with the question if present.
         */
        "userId": string;
    }
    interface QaQuestionForm {
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLQAndAElement extends Components.QAndA, HTMLStencilElement {
    }
    var HTMLQAndAElement: {
        prototype: HTMLQAndAElement;
        new (): HTMLQAndAElement;
    };
    interface HTMLQaQuestionFormElement extends Components.QaQuestionForm, HTMLStencilElement {
    }
    var HTMLQaQuestionFormElement: {
        prototype: HTMLQaQuestionFormElement;
        new (): HTMLQaQuestionFormElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "q-and-a": HTMLQAndAElement;
        "qa-question-form": HTMLQaQuestionFormElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface QAndA {
        /**
          * The endpoint that questions/upvotes will be posted to
         */
        "askEndpoint"?: string;
        /**
          * The correlation id of the q-and-a session. If present, will be sent with questions and used to retrieve questions by appending a `correlationId` query parameter to the `retrieveEndpoint` url.
         */
        "correlationId"?: string;
        /**
          * Primary color. Used mainly for button borders. Defaults to #10915b
         */
        "primaryColor"?: string;
        /**
          * The endpoint the list of questions will be retrieved from
         */
        "retrieveEndpoint"?: string;
        /**
          * Secondary color. Used for question and header text color. Defaults to  #112378
         */
        "secondaryColor"?: string;
        /**
          * The optional id of the user asking a question. Will be sent with the question if present.
         */
        "userId"?: string;
    }
    interface QaQuestionForm {
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "q-and-a": QAndA;
        "qa-question-form": QaQuestionForm;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "q-and-a": LocalJSX.QAndA & JSXBase.HTMLAttributes<HTMLQAndAElement>;
            "qa-question-form": LocalJSX.QaQuestionForm & JSXBase.HTMLAttributes<HTMLQaQuestionFormElement>;
        }
    }
}
